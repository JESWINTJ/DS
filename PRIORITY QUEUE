#define SIZE 5
#define INVALID  -99999
#include<stdio.h>
int pq[10][SIZE],f[10],r[10];
void fr(){
	int i;
	for(i=0;i<10;i++)
	{
		f[i]=r[i]=-1;

	}
}
void enqueue(int item,int pr)
{
	if(r[pr]==SIZE-1)
		printf("queue is full\n");
	else{
		if(f[pr]=-1)
			f[pr]=0;
		pq[pr][++r[pr]]=item;
	}
}
int dequeue()
{
	int i;
	for(i=0;i<10;i++){
		if(r[i]!=-1)
		{
			int item=pq[i][(f[i])];
			f[i]++;
			if(f[i]>r[i])
				f[i]=r[i]=-1;
			return item;
		}
	}
	return INVALID;
}
void show(){
	int i;
	for(i=0;i<10;i++)
	{
		if(r[i]!=-1){
			int j;
			printf("\n-->");
			for(j=f[i];j<=r[i];j++)
				printf("  %d  ",pq[i][j]);
			printf("\n");
		}
	}
} 
void main(){
        int flag=0,pr,in,out;
	fr();
        printf("1-enqueue  2-dequeue  3-display  4-exit\n");
        while(flag!=4){
                printf("enter the choice\n");
                scanf("%d",&flag);
                switch(flag)
                {
                        case 1:printf("enter the value and proirity");
                                scanf("%d%d",&in,&pr);
                                enqueue(in,pr);
                                break;
                        case 2: out=dequeue();
                                if(out!=INVALID)
                                        printf("dequeue element:%d\n",out);
                                break;
                        case 3:show();
                                break;
                        case 4:printf("exiting\n");
                                break;
                        default:printf("INVALID INPUT\n");
                }
        }
}
